2017-03-16 13:04:54 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-192]
2017-03-16 13:27:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENTS" not found; SQL statement:
select * from events [42102-192]
2017-03-16 13:44:30 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENTS" not found; SQL statement:
drop table events [42102-192]
2017-03-16 13:44:38 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "EVENT" not found; SQL statement:
drop table event [42102-192]
2017-03-16 13:59:25 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Column "Ed Sheeran" not found; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price)
values(001, "Ed Sheeran", "Ed Sheeran plays the Three Arena", "18:00", "Dublin", 12/02/2017, "ED SHEERAN", 65.00) [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Insert.prepare(Insert.java:270)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-16 13:59:49 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Column "Ed Sheeran" not found; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, "Ed Sheeran", "Ed Sheeran plays the Three Arena", "18:00", "Dublin", 12/02/2017, "ED SHEERAN", 65.00) [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Insert.prepare(Insert.java:270)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
2017-03-16 14:01:17 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "0"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 12/02/2017, 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 0, 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: 0
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
2017-03-16 14:03:06 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "12-0-2017"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', '12-0-2017', 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', '12-0-2017', 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: 12-0-2017
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:311)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
2017-03-16 14:03:15 jdbc[37]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "TIMESTAMP" constant "-2005"; SQL statement:
insert into event(event_id, event_name, description, time, location, date, title, price) values(001, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', 12-0-2017, 'ED SHEERAN', 65.00) -- (1, 'Ed Sheeran', 'Ed Sheeran plays the Three Arena', '18:00', 'Dublin', -2005, 'ED SHEERAN', 65.00) [22007-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:122)
	at org.h2.value.Value.convertTo(Value.java:967)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1388)
	at org.h2.server.web.WebApp.query(WebApp.java:1061)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1023)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1010)
	at org.h2.server.web.WebThread.process(WebThread.java:164)
	at org.h2.server.web.WebThread.run(WebThread.java:89)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: -2005
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:305)
	at org.h2.value.ValueTimestamp.parseTry(ValueTimestamp.java:140)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:120)
	... 15 more
<<<<<<< HEAD
2017-03-21 21:03:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 21:07:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-21 21:07:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
=======
2017-03-21 11:54:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
ORDER_DATE                    VARCHAR(255),
TOTAL_COST                    DOUBLE,
USER_ID                       BIGINT,
>>>>>>> dff9eed82aae26005759f96140f8b9bb449d60b0
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
<<<<<<< HEAD
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 21:10:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-21 21:10:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
=======
order_date                    varchar(255),
total_cost                    double,
user_id                       bigint,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-21 11:56:13 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "SELECT * FROM *[*] "; expected "identifier"; SQL statement:
select * from * [42001-192]
>>>>>>> dff9eed82aae26005759f96140f8b9bb449d60b0
2017-03-23 18:52:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-23 18:52:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-23 20:13:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-23 20:13:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-29 14:13:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:14:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:15:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:15:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:16:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:18:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "TICKET" not found; SQL statement:
select t0.ticket_id c0, t0.event_id c1, t0.ticket_type c2, t0.quantity c3, t0.qty c4, t0.price c5 from ticket t0 [42102-192]
2017-03-29 14:50:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "DROP TABLE IF EXISTS ORDER[*] "; expected "identifier"; SQL statement:
drop table if exists order [42001-192]
2017-03-29 14:50:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Syntax error in SQL statement "CREATE TABLE ORDER[*] (
ORDER_ID                      BIGINT NOT NULL,
USER_ID                       BIGINT,
ORDER_DATE                    TIMESTAMP,
TOTAL_COST                    DOUBLE,
CONSTRAINT PK_ORDER PRIMARY KEY (ORDER_ID)
) "; expected "identifier"; SQL statement:
create table order (
order_id                      bigint not null,
user_id                       bigint,
order_date                    timestamp,
total_cost                    double,
constraint pk_order primary key (order_id)
) [42001-192]
2017-03-29 14:50:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.event_id c0, t0.event_name c1, t0.time c2, t0.location c3, t0.date c4, t0.title c5 from event t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:310)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:328)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:295)
	at com.avaje.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:292)
	at com.avaje.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:94)
	at com.avaje.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:347)
	at com.avaje.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1388)
	at com.avaje.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1086)
	at models.Event.findAll(Event.java:98)
	at controllers.HomeController.events(HomeController.java:80)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:157)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:156)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$14$$anon$3$$anon$1.invocation(HandlerInvoker.scala:136)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:73)
	at play.http.HttpRequestHandler$1.call(HttpRequestHandler.java:54)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:492)
	at play.core.j.JavaAction.apply(JavaAction.scala:108)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:111)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:110)
	at scala.Option.map(Option.scala:146)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:110)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:103)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:249)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2017-03-29 14:50:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.event_id c0, t0.event_name c1, t0.time c2, t0.location c3, t0.date c4, t0.title c5 from event t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:310)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:328)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:295)
	at com.avaje.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:292)
	at com.avaje.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:94)
	at com.avaje.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:347)
	at com.avaje.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1388)
	at com.avaje.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1086)
	at models.Event.findAll(Event.java:98)
	at controllers.HomeController.events(HomeController.java:80)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:157)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:156)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$14$$anon$3$$anon$1.invocation(HandlerInvoker.scala:136)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:73)
	at play.http.HttpRequestHandler$1.call(HttpRequestHandler.java:54)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:492)
	at play.core.j.JavaAction.apply(JavaAction.scala:108)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:111)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:110)
	at scala.Option.map(Option.scala:146)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:110)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:103)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:249)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2017-03-29 14:56:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "NAME" not found; SQL statement:
select t0.event_id c0, t0.event_name c1, t0.time c2, t0.location c3, t0.date c4, t0.title c5 from event t0 order by name [42122-192]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:147)
	at org.h2.command.dml.Select.prepare(Select.java:852)
	at org.h2.command.Parser.prepareCommand(Parser.java:259)
	at org.h2.engine.Session.prepareLocal(Session.java:560)
	at org.h2.engine.Session.prepareCommand(Session.java:501)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1202)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:73)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:290)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:310)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQueryWithOption(CQuery.java:328)
	at com.avaje.ebeaninternal.server.query.CQuery.prepareBindExecuteQuery(CQuery.java:295)
	at com.avaje.ebeaninternal.server.query.CQueryEngine.findMany(CQueryEngine.java:292)
	at com.avaje.ebeaninternal.server.query.DefaultOrmQueryEngine.findMany(DefaultOrmQueryEngine.java:94)
	at com.avaje.ebeaninternal.server.core.OrmQueryRequest.findList(OrmQueryRequest.java:347)
	at com.avaje.ebeaninternal.server.core.DefaultServer.findList(DefaultServer.java:1388)
	at com.avaje.ebeaninternal.server.querydefn.DefaultOrmQuery.findList(DefaultOrmQuery.java:1086)
	at models.Event.findAll(Event.java:106)
	at controllers.HomeController.events(HomeController.java:80)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at router.Routes$$anonfun$routes$1$$anonfun$applyOrElse$7$$anonfun$apply$7.apply(Routes.scala:383)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:157)
	at play.core.routing.HandlerInvokerFactory$$anon$4.resultCall(HandlerInvoker.scala:156)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$14$$anon$3$$anon$1.invocation(HandlerInvoker.scala:136)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:73)
	at play.http.HttpRequestHandler$1.call(HttpRequestHandler.java:54)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at play.core.j.JavaAction$$anonfun$7.apply(JavaAction.scala:108)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.iteratee.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.Future$.apply(Future.scala:31)
	at scala.concurrent.Future$.apply(Future.scala:492)
	at play.core.j.JavaAction.apply(JavaAction.scala:108)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5$$anonfun$apply$6.apply(Action.scala:112)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:111)
	at play.api.mvc.Action$$anonfun$apply$2$$anonfun$apply$5.apply(Action.scala:110)
	at scala.Option.map(Option.scala:146)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:110)
	at play.api.mvc.Action$$anonfun$apply$2.apply(Action.scala:103)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:251)
	at scala.concurrent.Future$$anonfun$flatMap$1.apply(Future.scala:249)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:32)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply$mcV$sp(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at akka.dispatch.BatchingExecutor$BlockableBatch$$anonfun$run$1.apply(BatchingExecutor.scala:91)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:72)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:90)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
